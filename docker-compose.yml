version: '3.8'
services:
  postgres-users:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - "5457:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  postgres-tasks:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres
    ports:
      - "5456:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  users-service:
    build:
      context: ./users-service
    depends_on:
      postgres-users:
        condition: service_healthy
    ports:
      - "3001:3000"
    environment:
      - DB_SCHEMA=postgres
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_HOST=postgres-users
      - DB_PORT=5432
      - APP_PORT=3000
      - HOST_NAME=0.0.0.0
      - DATABASE_URL=postgres://admin:password@postgres-users:5432/postgres
  tasks-service:
    build:
      context: ./tasks-service
    depends_on:
      postgres-tasks:
        condition: service_healthy
    ports:
      - "3002:3000"
    environment:
      - DB_SCHEMA=postgres
      - DB_USER=admin
      - DB_PASSWORD=password
      - DB_HOST=postgres-tasks
      - DB_PORT=5432
      - APP_PORT=3000
      - HOST_NAME=0.0.0.0
      - DATABASE_URL=postgres://admin:password@postgres-tasks:5432/postgres
  ui-service:
    build:
      context: ./ui-service
    ports:
      - "3000:3000"
    environment:
      - APP_PORT=3000
      - HOST_NAME=0.0.0.0
      - USERS_SERVICE_HOST=host.docker.internal
      - USERS_SERVICE_PORT=3001
      - TASKS_SERVICE_HOST=host.docker.internal
      - TASKS_SERVICE_PORT=3002
